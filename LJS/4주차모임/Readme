## BOJ 링크와 스타트

- [O] N의 크기를 확인 하였는가?
- [O] 문제 제약사항을 확인 하였는가?https://github.com/SSAFYAlgoStudy/Seoul_13_AlgoStudy/blob/main/LJS/4%EC%A3%BC%EC%B0%A8%EB%AA%A8%EC%9E%84/Readme
- [] 시간복잡도를 계산 할 수 있는가?
- [O] 적절한 자료구조 활용하였는가?
- [O] 핵심 알고리즘을 구현할 수 있는가?
- [O] 문제를 풀었는가?

team 1 과 team 2에 조합을 넣는데, 최소 1개의 팀은 들어가야 하기 때문에 1~ (1<<N)-1 로 범위를 조정했다. 
그 다음 부터는 조합에 따른 합을 산출하여 최소값을 구하는 것인데,

아쉬운 점은
(1)  (2,3,4),  (2,3,4) (1)  같은 경우는 순서만 다른 상황으로 어쨌든 값은 동일한데,
이것이 불 필요한 연산이라 생각하여 경우의 수에서 제외하고 싶었지만, 원하는 대로 구현을 하지 못했다.

유의미한 가지치기인가..? 아니면 어차피 시간엔 큰 차이가 없나에 대한 의문이 아직 존재함.


## BOJ 게리맨더링

- [O] N의 크기를 확인 하였는가?
- [O] 문제 제약사항을 확인 하였는가?
- [O] 시간복잡도를 계산 할 수 있는가?
- [O] 적절한 자료구조 활용하였는가?
- [O] 핵심 알고리즘을 구현할 수 있는가?
- [O] 문제를 풀었는가?

temp1 과 team2를 부분집합으로 구현하였고, 이 이후는 자바에서 풀었던 방식과 동일하다.
노드가 인접해있는지 확인하기 위해 bfs를 돌렸고 순회하며 최소값을 갱신했다. 
