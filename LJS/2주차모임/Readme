## BOJ 벽 부수고 이동하기

- [O] N의 크기를 확인 하였는가?
- [O] 문제 제약사항을 확인 하였는가?
- [x] 시간복잡도를 계산 할 수 있는가?
- [O] 적절한 자료구조 활용하였는가?
- [O] 핵심 알고리즘을 구현할 수 있는가?
- [O] 문제를 풀었는가?

처음에는 벽을 하나까지만 부술 수 있다는 생각에 그러면 벽을 하나하나 전부 부쉈다는 가정하에,
벽의 개수 만큼 for문을 돌려서 완전탐색을 하여 최소값을 구하면 되지 않을까 라는 생각을 하였었다.
하지만 N의 크기는 최대 10000까지 가능했고, 나의 로직에 따르면 최악의 경우  10000*10000*10000 이라는 N^^3..? 의 시간이 소요될 수 있엇다.


flag를 써야 한다는 것은 생각하고 있었지만, 이를 3차원 배열로 만들어야 겠다는 생각은 하지 못하고 여러번의 시도로 계속 시간초과가 나거나 틀렸습니다가 출력되었다.
결국 result_cnt 를 이용한 3차원 배열을 사용하여 bfs를 조건에 따라 실행하는 방식으로 문제에 접근할 수 있었다.

발상의 전환이 필요한 문제였으며, bfs를 경우에 따라 실행해야 할 경우
[x][y]에 담는 것이 아니라,  [x][y][flag]를 활용하여 여러 경우에 따라 나눌 수 있음을 배웠다.
