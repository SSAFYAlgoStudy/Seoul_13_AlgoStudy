## BOJ 트리의 부모찾기

- [O] N의 크기를 확인 하였는가?
- [O] 문제 제약사항을 확인 하였는가?
- [x] 시간복잡도를 계산 할 수 있는가?
- [O] 적절한 자료구조 활용하였는가?
- [O] 핵심 알고리즘을 구현할 수 있는가?
- [O] 문제를 풀었는가?

 루트 노드가 1로 정해져 있고, dfs를 돌며 visited index에 탐색을
 시작한 부모 노드를 저장하고 visited를 출력하면 된다.

-------------------------------------------------------------------------------

## BOJ 나이순 정렬

- [O] N의 크기를 확인 하였는가?
- [O] 문제 제약사항을 확인 하였는가?
- [x] 시간복잡도를 계산 할 수 있는가?
- [O] 적절한 자료구조 활용하였는가?
- [O] 핵심 알고리즘을 구현할 수 있는가?
- [O] 문제를 풀었는가?

  해쉬 맵으로 lambda함수를 사용하여 나이순으로 정렬하면 문제다. 
  이름은 이미 정렬되어있다. 

-------------------------------------------------------------------------------

## BOJ 링크와 스타트

- [O] N의 크기를 확인 하였는가? 20C10으로 완전탐색을 해도 18만4000정도의 연산으로 끝낼 수 있다.
- [O] 문제 제약사항을 확인 하였는가? 
- [x] 시간복잡도를 계산 할 수 있는가?
- [x] 적절한 자료구조 활용하였는가?
- [O] 핵심 알고리즘을 구현할 수 있는가?
- [O] 문제를 풀었는가?

  수학적 개념을 넣어서 접근한 문제다. 
  가로와 세로의 합을 list로 저장해두고, 그 둘의 합을 다른 list로 저장한다.
  최소 합을 구해야 하기 때문에 , 저장해둔 합으로 Combination을 돌리며 최소값을 갱신했다. 
  
-------------------------------------------------------------------------------

## 양과 늑대

- [O] N의 크기를 확인 하였는가? 
- [O] 문제 제약사항을 확인 하였는가? 
- [x] 시간복잡도를 계산 할 수 있는가? 
- [O] 적절한 자료구조 활용하였는가? 
- [x] 핵심 알고리즘을 구현할 수 있는가? 
- [x] 문제를 풀었는가?
- 
   탐색하지 않아도 되는 늑대 ( 자식 노드에 양이 없는 늑대 ) 를 방문하지 않아도 되는 것을 어떻게 처리할지...
   이 늑대를 처리하지 못해서 무한 loop를 도느라 양이 정상적으로 출력되지 않음.
   
   단순히 visited를 처리하는것 만으로는 자식노드에 양이 있을 가능성을 배제할 수 없기 때문에 
   
   또 양을 모아서 반대편으로 갔을 때 visited를 어떻게 초기화해야 중복 없이 깔끔하게 순회할 수 있는지
   
   아니면 접근 자체가 잘못된건지 알고싶다.. 꼭 내힘으로 
   
